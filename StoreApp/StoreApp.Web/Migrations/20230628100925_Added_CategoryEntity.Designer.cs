// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreApp.Repositories;

#nullable disable

namespace StoreApp.Web.Migrations
{
    [DbContext(typeof(StoreAppDbContext))]
    [Migration("20230628100925_Added_CategoryEntity")]
    partial class AddedCategoryEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StoreApp.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Name = "Furnitures"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        });
                });

            modelBuilder.Entity("StoreApp.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Computer",
                            Price = 17000m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Keyboard",
                            Price = 1000m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Mouse",
                            Price = 1000m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Monitor",
                            Price = 7000m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "Desk",
                            Price = 1500m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Chair",
                            Price = 2500m
                        });
                });

            modelBuilder.Entity("StoreApp.Entities.Product", b =>
                {
                    b.HasOne("StoreApp.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("StoreApp.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
